\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{color}

\addtolength{\textwidth}{3cm}
\addtolength{\hoffset}{-1.5cm}
\addtolength{\textheight}{3.0cm}
\addtolength{\voffset}{-1.5cm}


%\usepackage{geometry} % see geometry.pdf on how to lay out the page. There's lots.
%\geometry{letterpaper} % or letter or a5paper or ... etc
% \geometry{landscape} % rotated page geometry

% See the ``Article customise'' template for come common customisations

\title{HPS DAQ Operations Manual v2.3.1}
\author{Per Hansson Adrian, Omar Moreno, Sergey Boiarinov\thanks{Contact person for document.}, Nathan Baltzell, Sho Uemura }
%\date{} % delete this line to display the current date

%%% BEGIN DOCUMENT
\begin{document}

\maketitle

\tableofcontents

\section{System Description}
The HPS experiment data acquisition (DAQ) handles the acquisition of data for the two sub-detectors: the SVT,  and the ECal. HPS employs two DAQ architectures: the SVT is readout with Advanced Telecom Communications Architecture (ATCA) hardware while the ECal use VXS based hardware. The trigger system receives input from the ECal, and distributes a trigger signal to all detector subsystems to read out a selected event. Figure~\ref{fig:daq} gives a schematic block diagram of the DAQ system.

For the ECal, every VXS crate contains a Readout Controller (ROC) that collects digitized information, processes it, and sends it on to the Event Builder (EB). The ROC is a single blade Intel-based CPU module running DAQ software under CentOS Linux OS. For the SVT ATCA system, a multi-ROC setup runs on embedded processors situated on the ATCA main board. The EB assembles information from the SVT and ECal ROCs into a single event which is passed to the Event Recorder (ER) that writes it to a RAID5-based data storage system. The DAQ network system is a Foundry router providing high-speed connections between the DAQ components and to the JLab computing facility. 

\newpage
\section{DAQ Control}
\label{sec:daq_control}

\subsection{Starting the DAQ from scratch}\label{sec:daqstart}

\begin{enumerate}
\item 
Log into \texttt{clondaq5} as \texttt{clasrun}.
%\item 
%If not sure, check that you can open a X window
%\begin{enumerate}
%\item 
%From the terminal clon03:0.1: type \texttt{xterm} and make sure xterminal is opened. If it is not, message "X11 connection rejected because of wrong authentication." will show up. If not continue:
%\item 
%Kill xwindow, start new one (you will be on \texttt{clon03}) and log into \texttt{clon10}.  Make sure \texttt{xterm} command can open xterminal.
%\end{enumerate}
\item 
To start all DAQ processes, open a terminal and run:\newline
\texttt{> hps\_start}\newline
\texttt{> roc\_xterms\_start}\newline
This opens up all windows needed on the current workspace. The workspace should look like Fig.~\ref{fig:coda}.
\end{enumerate}
%=======================
\begin{figure}[htbp]
\begin{center}
    \includegraphics[width=\textwidth]{coda_view.png}
\caption{CODA workspace.}
\label{fig:coda}
\end{center}
\vspace*{-5mm}
\end{figure}
%=======================

\subsection{Killing the DAQ}\label{sec:daqexit}
Log into \texttt{clondaq5} as \texttt{clasrun}, then execute the two commands:\newline
\texttt{> hps\_exit}\newline
\texttt{> roc\_xterms\_exit}\newline
This does not have to be done from the same terminal used for Section \ref{sec:daqstart}.  Do not proceed with DAQ operations until all the windows in Fig.~\ref{fig:coda} have disappeared.

\subsection{Start and stop a run}\label{sec:startstop}
\begin{enumerate}
\item
Beamline checklist
\begin{enumerate}
\item
Beam conditions are ready for running (see beam line manual for more details).
\end{enumerate}
\item
ECal Checklist
\begin{enumerate}
\item
All HV are on.
\item
ECal monitoring app is running.
\item
ECal FADC and DISC2 scaler displays are running.
\end{enumerate}
\item
SVT Checklist
\begin{enumerate}
\item
SVT position is appropriate for the run. {\bf Check with shift leader if not sure.}
\item 
SVT Flange boards (\texttt{SVT/Flange} GUI) and SVT Front end boards (\texttt{/SVT/FEB Main} GUI) are powered  with no alarms. 
\newline
{\bf IF ON:} check that currents are updating: if not, try to reboot the "iochvCaen" IOC.
\newline
{\bf IF OFF:} 
\begin{enumerate}
\item 
Restart the FEBs turning on in the order: 1) 'DIGI', 2) 'ANAP' and then 3) 'ANAN'; buttons are at the top of the \texttt{/SVT/FEB Main} GUI.
\item
Power all the flange channels from   \texttt{SVT/Flange}  GUI. 
\item 
Go to the \texttt{/SVT/Link Status} GUI and check that no FEB link errors are stably incrementing. If they do, try to cycle the flange board power (wait 10-20s between cycles). You may need up to 4 cycles.
\end{enumerate}
\item 
Bias high voltage is ON and at 180V (unless SVT expert has told you something different). 
\newline If the the HV is OFF and won't come on you might need to go and reset the interlock by going to the \texttt{Devices/SVT Soft Interlocks} GUI and Reseting the MPOD interlock. This happens after a beam trip. 
\newline {\bf \textcolor{red}{Important: Check that beam conditions for turning on bias voltage is OK before swiching on (see above)!}}

\item
SVT DAQ is in a state ready to run:
\begin{enumerate}
\item
Check that all the Control and Data DPMs and DTMs in \texttt{SVT/DAQ IOC Status} GUI are OK. 
\newline NOTE1: If there was a reboot of the SVT DAQ software or COB (see below) the data DPMs might not show green until after the 'Download' transition. 
\newline NOTE2:The control DPM should be OK as soon as a single FEB (and flanges are powered). It might take up to 30s for it to become green.

\item
Check that error counts in the \texttt{SVT/svtDpmLinkStatus} GUI are zero and not updating.

\item
In \texttt{/SVT/DPM Status} GUI": check that all data DPMs are in the appropriate CODA Run state e.g. if you are in 'Download' all should be in that state, etc. 
\newline NOTE: This may be not updated if there was a DAQ restart, e.g. the DPMs might be in 'End' as they doesn't know that CODA was restarted until 'Download' is initiated.
\end{enumerate}
\end{enumerate}

\item
{\bf If continuing with same the same run configuration from a stopped run continue to \ref{item:prestart}.}
\item
Go to the \texttt{RunControl} GUI: click \texttt{connect}, a new GUI window opens.
\item
Click on \texttt{DAQ Configuration}, choose 'HPS' and choose the configuration that has been explained to you: either on the run plan wiki or on the whiteboard. Click OK.
\item
Check that run number, data filename and run configuration filename shown on \texttt{RunControl} GUI are correct. The "download" button should appear. 
\item
\label{item:download}
Press \texttt{Download}. Wait until the "Prestart" button appears and  \texttt{RunControl} GUI reports that Download was completed. This might take up to 30s to complete.
\begin{enumerate}
\item
\item
Go to the \texttt{/SVT/svtDpmRunState} GUI and check that all DPM's are in "Download" state.
\item
When \texttt{Prestart} button shows up the DAQ is ready to take data. 
\end{enumerate}
\item
Open the hybrid GUI and check that the hybrids are on (currents are green). If not, push the \texttt{On} button on the \texttt{All hybrids ON/OFF} switch and wait about 30 seconds for hybrids to turn on. The hybrid GUI will freeze while the hybrids turn on; check the FEB GUI to watch FEB currents rise as the hybrids are switched on.
\item
\label{item:prestart}
Press \texttt{Prestart} and wait for ``transition Prestart succeeded'' message in RunControl window (about 30 seconds). The ``Go'' button should appear.
\begin{enumerate}
\item Push the ``Manual Update'' button in the DIAG GUI a few times. The ``Cluster Latency'' plot should show a single spike. If it shows two spikes, issue the following command on clondaq5:\newline
\texttt{> tcpClient hps11 'tiSyncReset()'}\newline
\item Check the FADC SCALERS and DISC SCALERS GUIs. The two should be smooth and similar to each other, no blank blocks or stripes (if you see these, do a full DAQ teardown and ROC reboots).
\item
Prestart SVT DAQ checklist (for experts):
\begin{enumerate}
\item
Go to the \texttt{/SVT/svtDpmRunState} GUI and check that all DPM's are in "Prestart" state. 
\item
Go to the \texttt{/SVT/Hybrid Sync} GUI and check that all hybrids are in "sync" i.e. the \texttt{SyncDetected} variable should be \texttt{0x1f} and indicator should be \textcolor{green}{green} for all hybrids.
\end{enumerate}
\end{enumerate}
\item
Press \texttt{Go} to start the run. Wait for ``transition Go succeeded'' message in RunControl window (about 10 seconds). The ``End run'' button should appear.
\begin{enumerate}
\item
Check that the run status is ``running'' and that triggers are issued at the typical rate.
\item
Reset the ECal and SVT monitoring plots (connect). Check SVT occupancy and max sample plots.
\item
Fill out a row in the run spreadsheet. Check the whiteboard and run plan wiki for any other logging requirements.
\item
Start of run SVT DAQ checklist (for experts):
\begin{enumerate}
\item
Go to the \texttt{svtDpmRunState} GUI and 
\begin{enumerate}
\item
Check that all DPM's are in "Go" state 
\item
Check that the \texttt{TrigCount} is incrementing for both DPM and DTMs and are similar.
\item
Check that the \texttt{EventCount} is incrementing.
\end{enumerate}
\end{enumerate}
\end{enumerate}
\end{enumerate}

\subsection{Stopping a run}
\begin{enumerate}
\item
Go to the \texttt{RunControl}  GUI and press \texttt{End Run} to stop data taking. Wait for ``End run succeeded'' message in RunControl window (about 15 seconds). The ``Prestart'' button should appear.
\item
End of run SVT DAQ checklist (for experts):
\begin{enumerate}
\item
Go to the \texttt{/SVT/svtDpmRunState} GUI and:
\begin{enumerate}
\item
Check that the CODA run state is  \texttt{Stopped} for all DPMs and DTMs.
\item
Check that the \texttt{TrigCount} and \texttt{EventCount} variables for DPMs and DTMs are identical and the indicators are \textcolor{green}{green}.
\end{enumerate}
\item
{\bf If starting a new run with the same configuration, go to section \ref{sec:startstop}, starting at item \ref{item:prestart}.}
\end{enumerate}
\end{enumerate}


\subsection{Beam trips: actions and recovery for DAQ}
Beam trips are frequent and in the most normal case the SVT high voltage bias will trip and will need to be restored before continuing.  If a beam trip happens:
\begin{enumerate}

\item When beam is back and we are ready (check BPM strip charts/scaler GUI to see that 2H02 position is back to normal) go to the SVT Bias GUI. Push the ``RESET'' button to reset the beam interlock, and push the ``180V'' button to ramp bias up to 180 V.

\item Reset the SVT monitoring plots (disconnect and connect). Check the occupancy and max sample plots.

\end{enumerate}


\newpage
\subsection{FIX DAQ}
{\em All of this must be executed as user \texttt{clasrun} on machine \texttt{clondaq5}}.
\subsubsection{What to do if you get an Error During Download}
\begin{enumerate}
    \item In run control GUI: {\em Cancel} and then {\em Download}
    \item If still fails:
    \begin{enumerate}
    	\item If any of the 'dpm' or 'dtm' has problem this means the SVT DAQ is in a bad state: GOTO Section~\ref{fixsvtdaq}, else
    	\item GOTO Section \ref{fixdaqbig}.
    \end{enumerate}
    \item GOTO Step \#9 in Section \ref{sec:startstop}.
\end{enumerate}


\subsubsection{Full DAQ Teardown and ROC Reboots and Restart}\label{fixdaqbig}
\begin{enumerate}
    \item These two commands can be done in parallel (simultaneously) in two different terminals and will gradually kill all the terminals in Figure~\ref{fig:coda}.  Do not wait for them to finish before proceeding to the next step.
      \subitem \texttt{hps\_exit}
      \subitem \texttt{roc\_xterms\_exit}
    \item \texttt{roc\_reboot hps11}
    \item Wait 30 seconds, then reboot the rest of the ROCs (these can all be done in parallel):
      \subitem \texttt{roc\_reboot hps1}
      \subitem \texttt{roc\_reboot hps2}
      \subitem \texttt{roc\_reboot hps12}
    \item Confirm Successfull Login to all ROCs (and logout afterwards): 
        \subitem\texttt{ssh hps11, hps12, hps1, hps2, hps1gtp, hps2gtp}
        \subitem This will not work instataneously; keep trying until all the ROCs are fully alive.  Should not be more than a couple minutes.  Pings will work before sshes.  If any fail to ssh successfully without error after 5 minutes, reboot the culprit ROC.  {\em If you need to rereboot hps11 here, GOTO STEP \#2}.
    \item After all 6 sshs are succesful and Step \#1 has completed, do the following.  These can be done in parallel in two different terminals:
    \subitem \texttt{hps\_start}
    \subitem \texttt{roc\_xterms\_start}
    \item After rebooting ROCs, you may have to reboot the trigger scalers GUI (REBOOT button at the bottom right).
\item GOTO Step \#5 in Section \ref{sec:startstop}
\end{enumerate}

\subsubsection{Rebooting a ROC}\label{sec:roc_reboot}
Execute this command (where \texttt{ROC} is one of \texttt{hps11, hps12, hps1, hps2}):\newline
\centerline{\texttt{roc\_reboot ROC}}

\vspace{5mm}\noindent
*Note that \texttt{hps1gtp} lives in \texttt{hps1}, so rebooting \texttt{hps1gtp} is done via \texttt{roc\_reboot hps1} (and similarly for \texttt{hps2gtp}).

\vspace{5mm}\noindent
{\em IF YOU REBOOT \texttt{hps11}, YOU MUST WAIT 30 SECONDS AND SUBSEQUENTLY REBOOT ALL OTHER ROCS \texttt{hps1, hps2, hps12} BEFORE PROCEEDING}.

    After rebooting ROCs, you may have to reboot the trigger scalers GUI (REBOOT button at the bottom right).
\subsubsection{Restarting Individual CODA Commands}\label{sec:codacommands}
This is more advanced.

If a CODA command dies (returns to prompt in the corresponding terminal) or a ROC must be rebooted, the CODA command for that ROC must be restarted.  The command can be manually executed again in the same terminal it was initally running in without a full DAQ restart.

If the ROC was not rebooted and only the CODA command died, the command should be the most recent in the shell history.  In this case you you should be able to press {\em up} in the terminal and re-execute the command.

Otherwise, here is a list of the CODA commands to be run on each ROC.  These should be executed in a terminal that is logged into the appropriate ROC (\texttt{hps1, hps2, hps11, hps12, hps1gtp,or hps2gtp}) as user \texttt{clasrun}.

\begin{itemize}
    \item \texttt {coda\_roc\_gef -s clashps -o $''$hps11 TS$''$}
    \item \texttt {coda\_roc\_gef -s clashps -o $''$hps12 ROC$''$}
    \item \texttt {coda\_roc\_gef -s clashps -o $''$hps1 ROC$''$}
    \item \texttt {coda\_roc\_gef -s clashps -o $''$hps2 ROC$''$}
    \item \texttt {coda\_roc -s clashps -o $''$hps1gtp ROC$''$}
    \item \texttt {coda\_roc -s clashps -o $''$hps2gtp ROC$''$}
\end{itemize}

\subsubsection{Debugging deadtime}
If you start a run and see an event rate of under 1 Hz and a livetime of 0\%:
\begin{enumerate}
\item On any clon,\newline
\texttt{> tcpClient hps11 tiStatus}\newline
\item Look for ``BUSY input source'':

\begin{tabular}{ l|l }
  HFBR \# & ROC and system \\
  1 & hps1 (ECal) \\
  2 & hps2 (ECal) \\
  3 & hps12 (ECal) \\
  4 & SVT DAQ \\
  5 & SVT DAQ \\
\end{tabular}
\item Do a full DAQ teardown, rebooting the problem ROC (if SVT DAQ, do a FIX SVT DAQ including \texttt{rem\_restart.sh})
\end{enumerate}

\subsubsection{FIX SVT DAQ}
\label{fixsvtdaq}

Before following the below procedure please record in a log entry what the status:
\begin{itemize}
\item What is the status of CODA: Did any of the ECAL ROCs crash? Did the EB, ET or ER crash? 
\item When did it fail: In state transition  'Download',  'Prestart'  or 'Go' or during a run?
\item What is the status of the ROCs (There are 15 DPMs and 2 DTMs): did they crash or report any error message?
\item Open the \texttt{/SVT/DAQ IOC Status} GUI and write down the status: which ones are red/green?
\item If this happened during Open the \texttt{/SVT/Hybrid Sync} GUI and write down if the status: which ones are red/green?

\end{itemize}

To try and resolve the SVT DAQ state try to follow these instructions.

\begin{enumerate}
    \item If one or many of the DPMs failed to or prestart
	\begin{enumerate}
    		\item Reboot the software by login into  \texttt{clondaq5} as 'clasrun'. \newline
		\texttt{> cd $\$$CLAS/slac\_svt/svtdaq/daq/rceScripts} \newline
		\texttt{> ./rem\_restart.sh} \newline
		You will see the script connecting to each host. Wait until finished, can be up to 20s. \newline
		Wait until you can ping host 'dtm0' \newline
		Open the \texttt{/SVT/DAQ IOC Status} GUI and verify that the control DPMs are green; it may take up to 30s (the FEBs need to be powered).
		\item Go back to the run control GUI and repeat the 'Download' step (may need to 'Cancel' and 'Reset' first)
		\item If one or many DPMs are still having issues then reboot the "COB"  by login into  \texttt{clondaq5} as 'clasrun'. \newline
		\texttt{> cd $\$$CLAS/slac\_svt/svtdaq/daq/rceScripts} \newline
		\texttt{> ./reboot\_cob} \newline
		Wait at least 10s. \newline
		Make sure you can ping host 'dtm0' \newline
		Repeat:\newline
		\texttt{> ./reboot\_cob} \newline
		Wait at least 10s. \newline
		Make sure you can ping host 'dtm0' \newline
		Open the \texttt{/SVT/DAQ IOC Status} GUI and verify that the control DPMs are green; it may take up to 30s (the FEBs need to be powered). The data DPMs might be red until you go past to 'Download'.

		\item After rebooting DPMs or COBs, hybrids will be turned off. Don't forget to switch them back on after the ``Download'' step.
		
 	\end{enumerate}
\end{enumerate}

    
   



%=======================
\begin{figure}[htbp]
\begin{center}
    \includegraphics[width=\textwidth]{daq.png}
\caption{Schematic overview of the DAQ and trigger system.}
\label{fig:daq}
\end{center}
%\vspace*{-5mm}
\end{figure}
%=======================


\end{document}
