\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{color}
%\usepackage{geometry} % see geometry.pdf on how to lay out the page. There's lots.
%\geometry{letterpaper} % or letter or a5paper or ... etc
% \geometry{landscape} % rotated page geometry

% See the ``Article customise'' template for come common customisations

\title{HPS DAQ Operations Manual v2.0}
\author{Per Hansson Adrian, Omar Moreno, Sergey Boiarinov\thanks{Contact person for document.} }
%\date{} % delete this line to display the current date

%%% BEGIN DOCUMENT
\begin{document}

\maketitle

\section{System Description}
The HPS experiment data acquisition (DAQ) handles the acquisition of data for the two sub-detectors: the SVT,  and the ECal. HPS employs two DAQ architectures: the SVT is readout with Advanced Telecom Communications Architecture (ATCA) hardware while the ECal use VXS based hardware. The trigger system receives input from the ECal, and distributes a trigger signal to all detector subsystems to read out a selected event. Figure~\ref{fig:daq} gives a schematic block diagram of the DAQ system.
%=======================
\begin{figure}[htbp]
\begin{center}
    \includegraphics[width=\textwidth]{daq.png}
\caption{Schematic overview of the DAQ and trigger system.}
\label{fig:daq}
\end{center}
%\vspace*{-5mm}
\end{figure}
%=======================
For the ECal, every VXS crate contains a Readout Controller (ROC) that collects digitized information, processes it, and sends it on to the Event Builder (EB). The ROC is a single blade Intel-based CPU module running DAQ software under CentOS Linux OS. For the SVT ATCA system, a multi-ROC setup runs on embedded processors situated on the ATCA main board. The EB assembles information from the SVT and ECal ROCs into a single event which is passed to the Event Recorder (ER) that writes it to a RAID5-based data storage system. The DAQ network system is a Foundry router providing high-speed connections between the DAQ components and to the JLab computing facility. 

\section{DAQ Control}
\label{sec:daq_control}

\subsection{Starting the DAQ from scratch}

\begin{enumerate}
\item 
Log into \texttt{clondaq5} as \texttt{clasrun}.
%\item 
%If not sure, check that you can open a X window
%\begin{enumerate}
%\item 
%From the terminal clon03:0.1: type \texttt{xterm} and make sure xterminal is opened. If it is not, message "X11 connection rejected because of wrong authentication." will show up. If not continue:
%\item 
%Kill xwindow, start new one (you will be on \texttt{clon03}) and log into \texttt{clon10}.  Make sure \texttt{xterm} command can open xterminal.
%\end{enumerate}
\item 
To start all DAQ processes, open a terminal and run:\newline
\texttt{> hps\_start} \newline
\texttt{> roc\_xterms\_start} \newline
This opens up all windows needed on the current workspace. The workspace should look like Fig.~\ref{fig:coda}.
\end{enumerate}
%=======================
\begin{figure}[htbp]
\begin{center}
    \includegraphics[width=\textwidth]{coda_view.png}
\caption{CODA workspace.}
\label{fig:coda}
\end{center}
%\vspace*{-5mm}
\end{figure}
%=======================

\subsection{Start and stop a run}
\begin{enumerate}
\item
Beamline checklist
\begin{enumerate}
\item
Beam conditions are ready for running (see beam line manual for more details).
\end{enumerate}
\item
ECal Checklist
\begin{enumerate}
\item
Items to be added.
\end{enumerate}
\item
SVT Checklist
\begin{enumerate}
\item
SVT position is appropriate for the run. {\bf Check with shift leader if not sure.}
\item 
SVT Flange boards and SVT Front end boards (FEBs) are powered with currents as specified. 
\newline
{\bf IF ON:} check that currents are updating: if not, try to reboot the "iochvCaen" IOC.
\newline
{\bf IF OFF:} restart the FEBs turning on in the order: {\bf DIG, ANAP and then ANAN}. Then power all the flange channels. Go to the "svtDpmLinkStatus" GUI and check that the FEB link errors are not incrementing. If they do, try to cycle the flange board power (wait 10-20s between cycles). You may need up to 4 cycles.
\item
SVT DAQ is in a state ready to run:
\begin{enumerate}
\item
Check that all the DPM and DTMs in \texttt{svtDaqIOCStatus} GUI are OK.
\item
Check that error counts in the "svtDpmLinkStatus" GUI are zero and not updating.
\item
In \texttt{svtDpmStatus} GUI: check that all DPMs are in "Ready" or "Unconfigured" state.
\item
In \texttt{svtDpmStatus} GUI": check that all DPMs are in the appropriate CODA Runstate. This may be different if the DAQ was stopped from a previous run (e.g. in "End") or this is starting from scratch.
\end{enumerate}
\end{enumerate}

\item
{\bf If continuing with same the same run configuration from a stopped run continue to \ref{item:prestart}.}
\item
Go to the \texttt{RunControl} GUI: click \texttt{connect}, a new GUI window opens.
\item
Click on \texttt{DAQ Configuration} and choose the \texttt{HPS} configuration. Click OK.
\item
Check that run number, data filename and run configuration filename shown on \texttt{RunControl} GUI are correct. The "download" button should appear. 
\item
\label{item:download}
Press \texttt{Download}. 
\begin{enumerate}
\item
Wait until the "Prestart" button appears and  \texttt{RunControl} GUI reports that Download was completed. This might takes up to 30s to complete. 
\item
Go to the \texttt{svtDpmRunState} GUI and check that all DPM's are in "Download" state. \
\item
When \texttt{Prestart} button shows up the DAQ is ready to take data. 
\end{enumerate}
\item
\label{item:prestart}
Press \texttt{Prestart} and wait between 5 and 10s and no errors are reported. 
\begin{enumerate}
\item
Go to the \texttt{svtDpmRunState} GUI and check that all DPM's are in "Prestart" state. 
\item
Go to the \texttt{svtHybSync} GUI and check that all hybrids are in "sync" i.e. the \texttt{SyncDetected} variable should be \texttt{0x1f} and indicator should be \textcolor{green}{green} for all hybrids.
\end{enumerate}
\item
Press \texttt{Go} to start the run. 
\begin{enumerate}
\item
Check that the run status is 'running' and that triggers are issued. 
\item
Verify that the SVT DAQ started run properly:
\begin{enumerate}
\item
Go to the \texttt{svtDpmRunState} GUI and 
\begin{enumerate}
\item
Check that all DPM's are in "Go" state 
\item
Check that the \texttt{TrigCount} is incrementing for both DPM and DTMs and are similar.
\item
Check that the \texttt{EventCount} is incrementing.
\end{enumerate}
\end{enumerate}
\end{enumerate}
\end{enumerate}

\subsection{Stopping a run}
\begin{enumerate}
\item
Go to the \texttt{RunControl}  GUI and press \texttt{End Run} to stop data taking. 
\item
End of run SVT DAQ checklist:
\begin{enumerate}
\item
Go to the \texttt{svtDpmRunState} GUI and:
\begin{enumerate}
\item
Check that the CODA run state is  \texttt{Stopped} for all DPMs and DTMs.
\item
Check that the \texttt{TrigCount} and \texttt{EventCount} variables for DPMs and DTMs are identical and the indicators are \textcolor{green}.
\end{enumerate}
\end{enumerate}
\end{enumerate}

\subsection{Stopping and restarting the DAQ}

\subsubsection{Stopping and restarting CODA DAQ a.k.a. \texttt{FIX DAQ}}

If DAQ problems occur and restarting the run do not work all DAQ processes can be restarted by typing:
\begin{enumerate}
\item
\texttt{hps\_exit} in a terminal on \texttt{clondaq5} \newline
\texttt{roc\_xterms\_exit} in a terminal on \texttt{clondaq5} \newline
Wait for script to finish and check that no coda processes are running in the machine.
\item
\texttt{hps\_start} in a terminal on \texttt{clondaq5} 
\texttt{roc\_xterms\_start} in a terminal on \texttt{clondaq5} \newline
\end{enumerate}

This will cleanup all processes and you can restart by following the procedures above. 


\subsubsection{Reboot ECal or master TI crates}
Sometimes hardware reset needed to bring the ECal DAQ system back to normal. For HPS there are four VME/VXS crates:  \texttt{hps11},  \texttt{hps12},  \texttt{hps1} and  \texttt{hps2}. These can be power cycled to try and get back into the normal state. Crate \texttt{hps11} is a master, so it have to be rebooted first, followed by others.
To reboot, do the following in a terminal on \texttt{clondaq3}:
\begin{enumerate}
\item
Type command \texttt{roc\_reboot hps11} in a terminal.  
\item 
Type command \texttt{roc\_reboot crate\_id} in the same terminal where \texttt{crate\_id} is \texttt{hps12},  \texttt{hps1} or  \texttt{hps2}.
\end{enumerate}


\subsubsection{SVT DAQ}

{\bf \textcolor{red}{These are expert tasks. Don't do this unless you know what you are doing or the SVT expert helps you.}}\newline

{\bf "Rebooting the COBs"} \newline
Open a terminal on \texttt{clondaq5}. \newline
\texttt{> cd $\$$CLAS/slac\_svt/svtdaq/daq/rceScripts} \newline
\texttt{>./reboot\_cobs} \newline

Issue a ping to one of the DAQ hosts in a terminal (e.g. \texttt{ping dtm0}) and wait until it responds \newline

Check if the reboot was successful by going to the \texttt{svtDaqIOCStatus} GUI and see that all nodes are coming back with OK status. This may take up to 30s. 

{\bf "Restart the DAQ software"} \newline
Open a terminal on \texttt{clondaq5}. \newline
\texttt{> cd $\$$CLAS/slac\_svt/svtdaq/daq/rceScripts} \newline
\texttt{> ./rem\_restart} \newline
You will see the script connecting to each host. Wait until finished, can be up to 20s. \newline

Check if the reboot was successful by going to the \texttt{svtDaqIOCStatus} GUI and see that all nodes are coming back with OK status. This may take up to 30s. 







\end{document}